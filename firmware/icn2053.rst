                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module icn2053
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _sendLatchedData_PARM_2
                                     12 	.globl _sendLatchedData
                                     13 	.globl _sendLatchedPulses
                                     14 	.globl _mDelayuS
                                     15 	.globl _BUTTON2
                                     16 	.globl _BUTTON1
                                     17 	.globl _LED_GCLK
                                     18 	.globl _LED_LE
                                     19 	.globl _LED_MOSI
                                     20 	.globl _LED_CLK
                                     21 	.globl _UIF_BUS_RST
                                     22 	.globl _UIF_DETECT
                                     23 	.globl _UIF_TRANSFER
                                     24 	.globl _UIF_SUSPEND
                                     25 	.globl _UIF_HST_SOF
                                     26 	.globl _UIF_FIFO_OV
                                     27 	.globl _U_SIE_FREE
                                     28 	.globl _U_TOG_OK
                                     29 	.globl _U_IS_NAK
                                     30 	.globl _ADC_CHAN0
                                     31 	.globl _ADC_CHAN1
                                     32 	.globl _CMP_CHAN
                                     33 	.globl _ADC_START
                                     34 	.globl _ADC_IF
                                     35 	.globl _CMP_IF
                                     36 	.globl _CMPO
                                     37 	.globl _U1RI
                                     38 	.globl _U1TI
                                     39 	.globl _U1RB8
                                     40 	.globl _U1TB8
                                     41 	.globl _U1REN
                                     42 	.globl _U1SMOD
                                     43 	.globl _U1SM0
                                     44 	.globl _S0_R_FIFO
                                     45 	.globl _S0_T_FIFO
                                     46 	.globl _S0_FREE
                                     47 	.globl _S0_IF_BYTE
                                     48 	.globl _S0_IF_FIRST
                                     49 	.globl _S0_IF_OV
                                     50 	.globl _S0_FST_ACT
                                     51 	.globl _CP_RL2
                                     52 	.globl _C_T2
                                     53 	.globl _TR2
                                     54 	.globl _EXEN2
                                     55 	.globl _TCLK
                                     56 	.globl _RCLK
                                     57 	.globl _EXF2
                                     58 	.globl _CAP1F
                                     59 	.globl _TF2
                                     60 	.globl _RI
                                     61 	.globl _TI
                                     62 	.globl _RB8
                                     63 	.globl _TB8
                                     64 	.globl _REN
                                     65 	.globl _SM2
                                     66 	.globl _SM1
                                     67 	.globl _SM0
                                     68 	.globl _IT0
                                     69 	.globl _IE0
                                     70 	.globl _IT1
                                     71 	.globl _IE1
                                     72 	.globl _TR0
                                     73 	.globl _TF0
                                     74 	.globl _TR1
                                     75 	.globl _TF1
                                     76 	.globl _RXD
                                     77 	.globl _PWM1_
                                     78 	.globl _TXD
                                     79 	.globl _PWM2_
                                     80 	.globl _AIN3
                                     81 	.globl _VBUS1
                                     82 	.globl _INT0
                                     83 	.globl _TXD1_
                                     84 	.globl _INT1
                                     85 	.globl _T0
                                     86 	.globl _RXD1_
                                     87 	.globl _PWM2
                                     88 	.globl _T1
                                     89 	.globl _UDP
                                     90 	.globl _UDM
                                     91 	.globl _TIN0
                                     92 	.globl _CAP1
                                     93 	.globl _T2
                                     94 	.globl _AIN0
                                     95 	.globl _VBUS2
                                     96 	.globl _TIN1
                                     97 	.globl _CAP2
                                     98 	.globl _T2EX
                                     99 	.globl _RXD_
                                    100 	.globl _TXD_
                                    101 	.globl _AIN1
                                    102 	.globl _UCC1
                                    103 	.globl _TIN2
                                    104 	.globl _SCS
                                    105 	.globl _CAP1_
                                    106 	.globl _T2_
                                    107 	.globl _AIN2
                                    108 	.globl _UCC2
                                    109 	.globl _TIN3
                                    110 	.globl _PWM1
                                    111 	.globl _MOSI
                                    112 	.globl _TIN4
                                    113 	.globl _RXD1
                                    114 	.globl _MISO
                                    115 	.globl _TIN5
                                    116 	.globl _TXD1
                                    117 	.globl _SCK
                                    118 	.globl _IE_SPI0
                                    119 	.globl _IE_TKEY
                                    120 	.globl _IE_USB
                                    121 	.globl _IE_ADC
                                    122 	.globl _IE_UART1
                                    123 	.globl _IE_PWMX
                                    124 	.globl _IE_GPIO
                                    125 	.globl _IE_WDOG
                                    126 	.globl _PX0
                                    127 	.globl _PT0
                                    128 	.globl _PX1
                                    129 	.globl _PT1
                                    130 	.globl _PS
                                    131 	.globl _PT2
                                    132 	.globl _PL_FLAG
                                    133 	.globl _PH_FLAG
                                    134 	.globl _EX0
                                    135 	.globl _ET0
                                    136 	.globl _EX1
                                    137 	.globl _ET1
                                    138 	.globl _ES
                                    139 	.globl _ET2
                                    140 	.globl _E_DIS
                                    141 	.globl _EA
                                    142 	.globl _P
                                    143 	.globl _F1
                                    144 	.globl _OV
                                    145 	.globl _RS0
                                    146 	.globl _RS1
                                    147 	.globl _F0
                                    148 	.globl _AC
                                    149 	.globl _CY
                                    150 	.globl _UEP1_DMA_H
                                    151 	.globl _UEP1_DMA_L
                                    152 	.globl _UEP1_DMA
                                    153 	.globl _UEP0_DMA_H
                                    154 	.globl _UEP0_DMA_L
                                    155 	.globl _UEP0_DMA
                                    156 	.globl _UEP2_3_MOD
                                    157 	.globl _UEP4_1_MOD
                                    158 	.globl _UEP3_DMA_H
                                    159 	.globl _UEP3_DMA_L
                                    160 	.globl _UEP3_DMA
                                    161 	.globl _UEP2_DMA_H
                                    162 	.globl _UEP2_DMA_L
                                    163 	.globl _UEP2_DMA
                                    164 	.globl _USB_DEV_AD
                                    165 	.globl _USB_CTRL
                                    166 	.globl _USB_INT_EN
                                    167 	.globl _UEP4_T_LEN
                                    168 	.globl _UEP4_CTRL
                                    169 	.globl _UEP0_T_LEN
                                    170 	.globl _UEP0_CTRL
                                    171 	.globl _USB_RX_LEN
                                    172 	.globl _USB_MIS_ST
                                    173 	.globl _USB_INT_ST
                                    174 	.globl _USB_INT_FG
                                    175 	.globl _UEP3_T_LEN
                                    176 	.globl _UEP3_CTRL
                                    177 	.globl _UEP2_T_LEN
                                    178 	.globl _UEP2_CTRL
                                    179 	.globl _UEP1_T_LEN
                                    180 	.globl _UEP1_CTRL
                                    181 	.globl _UDEV_CTRL
                                    182 	.globl _USB_C_CTRL
                                    183 	.globl _TKEY_DATH
                                    184 	.globl _TKEY_DATL
                                    185 	.globl _TKEY_DAT
                                    186 	.globl _TKEY_CTRL
                                    187 	.globl _ADC_DATA
                                    188 	.globl _ADC_CFG
                                    189 	.globl _ADC_CTRL
                                    190 	.globl _SBAUD1
                                    191 	.globl _SBUF1
                                    192 	.globl _SCON1
                                    193 	.globl _SPI0_SETUP
                                    194 	.globl _SPI0_CK_SE
                                    195 	.globl _SPI0_CTRL
                                    196 	.globl _SPI0_DATA
                                    197 	.globl _SPI0_STAT
                                    198 	.globl _PWM_CK_SE
                                    199 	.globl _PWM_CTRL
                                    200 	.globl _PWM_DATA1
                                    201 	.globl _PWM_DATA2
                                    202 	.globl _T2CAP1H
                                    203 	.globl _T2CAP1L
                                    204 	.globl _T2CAP1
                                    205 	.globl _TH2
                                    206 	.globl _TL2
                                    207 	.globl _T2COUNT
                                    208 	.globl _RCAP2H
                                    209 	.globl _RCAP2L
                                    210 	.globl _RCAP2
                                    211 	.globl _T2MOD
                                    212 	.globl _T2CON
                                    213 	.globl _SBUF
                                    214 	.globl _SCON
                                    215 	.globl _TH1
                                    216 	.globl _TH0
                                    217 	.globl _TL1
                                    218 	.globl _TL0
                                    219 	.globl _TMOD
                                    220 	.globl _TCON
                                    221 	.globl _XBUS_AUX
                                    222 	.globl _PIN_FUNC
                                    223 	.globl _P3_DIR_PU
                                    224 	.globl _P3_MOD_OC
                                    225 	.globl _P3
                                    226 	.globl _P2
                                    227 	.globl _P1_DIR_PU
                                    228 	.globl _P1_MOD_OC
                                    229 	.globl _P1
                                    230 	.globl _ROM_CTRL
                                    231 	.globl _ROM_DATA_H
                                    232 	.globl _ROM_DATA_L
                                    233 	.globl _ROM_DATA
                                    234 	.globl _ROM_ADDR_H
                                    235 	.globl _ROM_ADDR_L
                                    236 	.globl _ROM_ADDR
                                    237 	.globl _GPIO_IE
                                    238 	.globl _IP_EX
                                    239 	.globl _IE_EX
                                    240 	.globl _IP
                                    241 	.globl _IE
                                    242 	.globl _WDOG_COUNT
                                    243 	.globl _RESET_KEEP
                                    244 	.globl _WAKE_CTRL
                                    245 	.globl _CLOCK_CFG
                                    246 	.globl _PCON
                                    247 	.globl _GLOBAL_CFG
                                    248 	.globl _SAFE_MOD
                                    249 	.globl _DPH
                                    250 	.globl _DPL
                                    251 	.globl _SP
                                    252 	.globl _B
                                    253 	.globl _ACC
                                    254 	.globl _PSW
                                    255 	.globl _icn2053_updateDisplay_PARM_2
                                    256 	.globl _icn2053_WriteConfigRegister_PARM_2
                                    257 	.globl _icn2053_DataLatch
                                    258 	.globl _icn2053_Vsync
                                    259 	.globl _icn2053_WriteConfigRegister
                                    260 	.globl _icn2053_EnableAllOutputChannels
                                    261 	.globl _icn2053_PreActive
                                    262 	.globl _icn2053_begin
                                    263 	.globl _icn2053_updateDisplay
                                    264 ;--------------------------------------------------------
                                    265 ; special function registers
                                    266 ;--------------------------------------------------------
                                    267 	.area RSEG    (ABS,DATA)
      000000                        268 	.org 0x0000
                           0000D0   269 _PSW	=	0x00d0
                           0000E0   270 _ACC	=	0x00e0
                           0000F0   271 _B	=	0x00f0
                           000081   272 _SP	=	0x0081
                           000082   273 _DPL	=	0x0082
                           000083   274 _DPH	=	0x0083
                           0000A1   275 _SAFE_MOD	=	0x00a1
                           0000B1   276 _GLOBAL_CFG	=	0x00b1
                           000087   277 _PCON	=	0x0087
                           0000B9   278 _CLOCK_CFG	=	0x00b9
                           0000A9   279 _WAKE_CTRL	=	0x00a9
                           0000FE   280 _RESET_KEEP	=	0x00fe
                           0000FF   281 _WDOG_COUNT	=	0x00ff
                           0000A8   282 _IE	=	0x00a8
                           0000B8   283 _IP	=	0x00b8
                           0000E8   284 _IE_EX	=	0x00e8
                           0000E9   285 _IP_EX	=	0x00e9
                           0000C7   286 _GPIO_IE	=	0x00c7
                           008584   287 _ROM_ADDR	=	0x8584
                           000084   288 _ROM_ADDR_L	=	0x0084
                           000085   289 _ROM_ADDR_H	=	0x0085
                           008F8E   290 _ROM_DATA	=	0x8f8e
                           00008E   291 _ROM_DATA_L	=	0x008e
                           00008F   292 _ROM_DATA_H	=	0x008f
                           000086   293 _ROM_CTRL	=	0x0086
                           000090   294 _P1	=	0x0090
                           000092   295 _P1_MOD_OC	=	0x0092
                           000093   296 _P1_DIR_PU	=	0x0093
                           0000A0   297 _P2	=	0x00a0
                           0000B0   298 _P3	=	0x00b0
                           000096   299 _P3_MOD_OC	=	0x0096
                           000097   300 _P3_DIR_PU	=	0x0097
                           0000C6   301 _PIN_FUNC	=	0x00c6
                           0000A2   302 _XBUS_AUX	=	0x00a2
                           000088   303 _TCON	=	0x0088
                           000089   304 _TMOD	=	0x0089
                           00008A   305 _TL0	=	0x008a
                           00008B   306 _TL1	=	0x008b
                           00008C   307 _TH0	=	0x008c
                           00008D   308 _TH1	=	0x008d
                           000098   309 _SCON	=	0x0098
                           000099   310 _SBUF	=	0x0099
                           0000C8   311 _T2CON	=	0x00c8
                           0000C9   312 _T2MOD	=	0x00c9
                           00CBCA   313 _RCAP2	=	0xcbca
                           0000CA   314 _RCAP2L	=	0x00ca
                           0000CB   315 _RCAP2H	=	0x00cb
                           00CDCC   316 _T2COUNT	=	0xcdcc
                           0000CC   317 _TL2	=	0x00cc
                           0000CD   318 _TH2	=	0x00cd
                           00CFCE   319 _T2CAP1	=	0xcfce
                           0000CE   320 _T2CAP1L	=	0x00ce
                           0000CF   321 _T2CAP1H	=	0x00cf
                           00009B   322 _PWM_DATA2	=	0x009b
                           00009C   323 _PWM_DATA1	=	0x009c
                           00009D   324 _PWM_CTRL	=	0x009d
                           00009E   325 _PWM_CK_SE	=	0x009e
                           0000F8   326 _SPI0_STAT	=	0x00f8
                           0000F9   327 _SPI0_DATA	=	0x00f9
                           0000FA   328 _SPI0_CTRL	=	0x00fa
                           0000FB   329 _SPI0_CK_SE	=	0x00fb
                           0000FC   330 _SPI0_SETUP	=	0x00fc
                           0000C0   331 _SCON1	=	0x00c0
                           0000C1   332 _SBUF1	=	0x00c1
                           0000C2   333 _SBAUD1	=	0x00c2
                           000080   334 _ADC_CTRL	=	0x0080
                           00009A   335 _ADC_CFG	=	0x009a
                           00009F   336 _ADC_DATA	=	0x009f
                           0000C3   337 _TKEY_CTRL	=	0x00c3
                           00C5C4   338 _TKEY_DAT	=	0xc5c4
                           0000C4   339 _TKEY_DATL	=	0x00c4
                           0000C5   340 _TKEY_DATH	=	0x00c5
                           000091   341 _USB_C_CTRL	=	0x0091
                           0000D1   342 _UDEV_CTRL	=	0x00d1
                           0000D2   343 _UEP1_CTRL	=	0x00d2
                           0000D3   344 _UEP1_T_LEN	=	0x00d3
                           0000D4   345 _UEP2_CTRL	=	0x00d4
                           0000D5   346 _UEP2_T_LEN	=	0x00d5
                           0000D6   347 _UEP3_CTRL	=	0x00d6
                           0000D7   348 _UEP3_T_LEN	=	0x00d7
                           0000D8   349 _USB_INT_FG	=	0x00d8
                           0000D9   350 _USB_INT_ST	=	0x00d9
                           0000DA   351 _USB_MIS_ST	=	0x00da
                           0000DB   352 _USB_RX_LEN	=	0x00db
                           0000DC   353 _UEP0_CTRL	=	0x00dc
                           0000DD   354 _UEP0_T_LEN	=	0x00dd
                           0000DE   355 _UEP4_CTRL	=	0x00de
                           0000DF   356 _UEP4_T_LEN	=	0x00df
                           0000E1   357 _USB_INT_EN	=	0x00e1
                           0000E2   358 _USB_CTRL	=	0x00e2
                           0000E3   359 _USB_DEV_AD	=	0x00e3
                           00E5E4   360 _UEP2_DMA	=	0xe5e4
                           0000E4   361 _UEP2_DMA_L	=	0x00e4
                           0000E5   362 _UEP2_DMA_H	=	0x00e5
                           00E7E6   363 _UEP3_DMA	=	0xe7e6
                           0000E6   364 _UEP3_DMA_L	=	0x00e6
                           0000E7   365 _UEP3_DMA_H	=	0x00e7
                           0000EA   366 _UEP4_1_MOD	=	0x00ea
                           0000EB   367 _UEP2_3_MOD	=	0x00eb
                           00EDEC   368 _UEP0_DMA	=	0xedec
                           0000EC   369 _UEP0_DMA_L	=	0x00ec
                           0000ED   370 _UEP0_DMA_H	=	0x00ed
                           00EFEE   371 _UEP1_DMA	=	0xefee
                           0000EE   372 _UEP1_DMA_L	=	0x00ee
                           0000EF   373 _UEP1_DMA_H	=	0x00ef
                                    374 ;--------------------------------------------------------
                                    375 ; special function bits
                                    376 ;--------------------------------------------------------
                                    377 	.area RSEG    (ABS,DATA)
      000000                        378 	.org 0x0000
                           0000D7   379 _CY	=	0x00d7
                           0000D6   380 _AC	=	0x00d6
                           0000D5   381 _F0	=	0x00d5
                           0000D4   382 _RS1	=	0x00d4
                           0000D3   383 _RS0	=	0x00d3
                           0000D2   384 _OV	=	0x00d2
                           0000D1   385 _F1	=	0x00d1
                           0000D0   386 _P	=	0x00d0
                           0000AF   387 _EA	=	0x00af
                           0000AE   388 _E_DIS	=	0x00ae
                           0000AD   389 _ET2	=	0x00ad
                           0000AC   390 _ES	=	0x00ac
                           0000AB   391 _ET1	=	0x00ab
                           0000AA   392 _EX1	=	0x00aa
                           0000A9   393 _ET0	=	0x00a9
                           0000A8   394 _EX0	=	0x00a8
                           0000BF   395 _PH_FLAG	=	0x00bf
                           0000BE   396 _PL_FLAG	=	0x00be
                           0000BD   397 _PT2	=	0x00bd
                           0000BC   398 _PS	=	0x00bc
                           0000BB   399 _PT1	=	0x00bb
                           0000BA   400 _PX1	=	0x00ba
                           0000B9   401 _PT0	=	0x00b9
                           0000B8   402 _PX0	=	0x00b8
                           0000EF   403 _IE_WDOG	=	0x00ef
                           0000EE   404 _IE_GPIO	=	0x00ee
                           0000ED   405 _IE_PWMX	=	0x00ed
                           0000EC   406 _IE_UART1	=	0x00ec
                           0000EB   407 _IE_ADC	=	0x00eb
                           0000EA   408 _IE_USB	=	0x00ea
                           0000E9   409 _IE_TKEY	=	0x00e9
                           0000E8   410 _IE_SPI0	=	0x00e8
                           000097   411 _SCK	=	0x0097
                           000097   412 _TXD1	=	0x0097
                           000097   413 _TIN5	=	0x0097
                           000096   414 _MISO	=	0x0096
                           000096   415 _RXD1	=	0x0096
                           000096   416 _TIN4	=	0x0096
                           000095   417 _MOSI	=	0x0095
                           000095   418 _PWM1	=	0x0095
                           000095   419 _TIN3	=	0x0095
                           000095   420 _UCC2	=	0x0095
                           000095   421 _AIN2	=	0x0095
                           000094   422 _T2_	=	0x0094
                           000094   423 _CAP1_	=	0x0094
                           000094   424 _SCS	=	0x0094
                           000094   425 _TIN2	=	0x0094
                           000094   426 _UCC1	=	0x0094
                           000094   427 _AIN1	=	0x0094
                           000093   428 _TXD_	=	0x0093
                           000092   429 _RXD_	=	0x0092
                           000091   430 _T2EX	=	0x0091
                           000091   431 _CAP2	=	0x0091
                           000091   432 _TIN1	=	0x0091
                           000091   433 _VBUS2	=	0x0091
                           000091   434 _AIN0	=	0x0091
                           000090   435 _T2	=	0x0090
                           000090   436 _CAP1	=	0x0090
                           000090   437 _TIN0	=	0x0090
                           0000B7   438 _UDM	=	0x00b7
                           0000B6   439 _UDP	=	0x00b6
                           0000B5   440 _T1	=	0x00b5
                           0000B4   441 _PWM2	=	0x00b4
                           0000B4   442 _RXD1_	=	0x00b4
                           0000B4   443 _T0	=	0x00b4
                           0000B3   444 _INT1	=	0x00b3
                           0000B2   445 _TXD1_	=	0x00b2
                           0000B2   446 _INT0	=	0x00b2
                           0000B2   447 _VBUS1	=	0x00b2
                           0000B2   448 _AIN3	=	0x00b2
                           0000B1   449 _PWM2_	=	0x00b1
                           0000B1   450 _TXD	=	0x00b1
                           0000B0   451 _PWM1_	=	0x00b0
                           0000B0   452 _RXD	=	0x00b0
                           00008F   453 _TF1	=	0x008f
                           00008E   454 _TR1	=	0x008e
                           00008D   455 _TF0	=	0x008d
                           00008C   456 _TR0	=	0x008c
                           00008B   457 _IE1	=	0x008b
                           00008A   458 _IT1	=	0x008a
                           000089   459 _IE0	=	0x0089
                           000088   460 _IT0	=	0x0088
                           00009F   461 _SM0	=	0x009f
                           00009E   462 _SM1	=	0x009e
                           00009D   463 _SM2	=	0x009d
                           00009C   464 _REN	=	0x009c
                           00009B   465 _TB8	=	0x009b
                           00009A   466 _RB8	=	0x009a
                           000099   467 _TI	=	0x0099
                           000098   468 _RI	=	0x0098
                           0000CF   469 _TF2	=	0x00cf
                           0000CF   470 _CAP1F	=	0x00cf
                           0000CE   471 _EXF2	=	0x00ce
                           0000CD   472 _RCLK	=	0x00cd
                           0000CC   473 _TCLK	=	0x00cc
                           0000CB   474 _EXEN2	=	0x00cb
                           0000CA   475 _TR2	=	0x00ca
                           0000C9   476 _C_T2	=	0x00c9
                           0000C8   477 _CP_RL2	=	0x00c8
                           0000FF   478 _S0_FST_ACT	=	0x00ff
                           0000FE   479 _S0_IF_OV	=	0x00fe
                           0000FD   480 _S0_IF_FIRST	=	0x00fd
                           0000FC   481 _S0_IF_BYTE	=	0x00fc
                           0000FB   482 _S0_FREE	=	0x00fb
                           0000FA   483 _S0_T_FIFO	=	0x00fa
                           0000F8   484 _S0_R_FIFO	=	0x00f8
                           0000C7   485 _U1SM0	=	0x00c7
                           0000C5   486 _U1SMOD	=	0x00c5
                           0000C4   487 _U1REN	=	0x00c4
                           0000C3   488 _U1TB8	=	0x00c3
                           0000C2   489 _U1RB8	=	0x00c2
                           0000C1   490 _U1TI	=	0x00c1
                           0000C0   491 _U1RI	=	0x00c0
                           000087   492 _CMPO	=	0x0087
                           000086   493 _CMP_IF	=	0x0086
                           000085   494 _ADC_IF	=	0x0085
                           000084   495 _ADC_START	=	0x0084
                           000083   496 _CMP_CHAN	=	0x0083
                           000081   497 _ADC_CHAN1	=	0x0081
                           000080   498 _ADC_CHAN0	=	0x0080
                           0000DF   499 _U_IS_NAK	=	0x00df
                           0000DE   500 _U_TOG_OK	=	0x00de
                           0000DD   501 _U_SIE_FREE	=	0x00dd
                           0000DC   502 _UIF_FIFO_OV	=	0x00dc
                           0000DB   503 _UIF_HST_SOF	=	0x00db
                           0000DA   504 _UIF_SUSPEND	=	0x00da
                           0000D9   505 _UIF_TRANSFER	=	0x00d9
                           0000D8   506 _UIF_DETECT	=	0x00d8
                           0000D8   507 _UIF_BUS_RST	=	0x00d8
                           000093   508 _LED_CLK	=	0x0093
                           000091   509 _LED_MOSI	=	0x0091
                           000092   510 _LED_LE	=	0x0092
                           000090   511 _LED_GCLK	=	0x0090
                           0000B5   512 _BUTTON1	=	0x00b5
                           0000B3   513 _BUTTON2	=	0x00b3
                                    514 ;--------------------------------------------------------
                                    515 ; overlayable register banks
                                    516 ;--------------------------------------------------------
                                    517 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        518 	.ds 8
                                    519 ;--------------------------------------------------------
                                    520 ; internal ram data
                                    521 ;--------------------------------------------------------
                                    522 	.area DSEG    (DATA)
      000008                        523 _icn2053_WriteConfigRegister_PARM_2:
      000008                        524 	.ds 2
      00000A                        525 _icn2053_updateDisplay_PARM_2:
      00000A                        526 	.ds 1
                                    527 ;--------------------------------------------------------
                                    528 ; overlayable items in internal ram 
                                    529 ;--------------------------------------------------------
                                    530 	.area	OSEG    (OVR,DATA)
                                    531 	.area	OSEG    (OVR,DATA)
      00007B                        532 _sendLatchedData_PARM_2:
      00007B                        533 	.ds 1
                                    534 ;--------------------------------------------------------
                                    535 ; indirectly addressable internal ram data
                                    536 ;--------------------------------------------------------
                                    537 	.area ISEG    (DATA)
                                    538 ;--------------------------------------------------------
                                    539 ; absolute internal ram data
                                    540 ;--------------------------------------------------------
                                    541 	.area IABS    (ABS,DATA)
                                    542 	.area IABS    (ABS,DATA)
                                    543 ;--------------------------------------------------------
                                    544 ; bit data
                                    545 ;--------------------------------------------------------
                                    546 	.area BSEG    (BIT)
      000000                        547 _sendLatchedData_sloc0_1_0:
      000000                        548 	.ds 1
                                    549 ;--------------------------------------------------------
                                    550 ; paged external ram data
                                    551 ;--------------------------------------------------------
                                    552 	.area PSEG    (PAG,XDATA)
                                    553 ;--------------------------------------------------------
                                    554 ; external ram data
                                    555 ;--------------------------------------------------------
                                    556 	.area XSEG    (XDATA)
                                    557 ;--------------------------------------------------------
                                    558 ; absolute external ram data
                                    559 ;--------------------------------------------------------
                                    560 	.area XABS    (ABS,XDATA)
                                    561 ;--------------------------------------------------------
                                    562 ; external initialized ram data
                                    563 ;--------------------------------------------------------
                                    564 	.area XISEG   (XDATA)
                                    565 	.area HOME    (CODE)
                                    566 	.area GSINIT0 (CODE)
                                    567 	.area GSINIT1 (CODE)
                                    568 	.area GSINIT2 (CODE)
                                    569 	.area GSINIT3 (CODE)
                                    570 	.area GSINIT4 (CODE)
                                    571 	.area GSINIT5 (CODE)
                                    572 	.area GSINIT  (CODE)
                                    573 	.area GSFINAL (CODE)
                                    574 	.area CSEG    (CODE)
                                    575 ;--------------------------------------------------------
                                    576 ; global & static initialisations
                                    577 ;--------------------------------------------------------
                                    578 	.area HOME    (CODE)
                                    579 	.area GSINIT  (CODE)
                                    580 	.area GSFINAL (CODE)
                                    581 	.area GSINIT  (CODE)
                                    582 ;--------------------------------------------------------
                                    583 ; Home
                                    584 ;--------------------------------------------------------
                                    585 	.area HOME    (CODE)
                                    586 	.area HOME    (CODE)
                                    587 ;--------------------------------------------------------
                                    588 ; code
                                    589 ;--------------------------------------------------------
                                    590 	.area CSEG    (CODE)
                                    591 ;------------------------------------------------------------
                                    592 ;Allocation info for local variables in function 'sendLatchedPulses'
                                    593 ;------------------------------------------------------------
                                    594 ;pulses                    Allocated to registers r7 
                                    595 ;------------------------------------------------------------
                                    596 ;	icn2053.c:11: void sendLatchedPulses(uint8_t pulses) {
                                    597 ;	-----------------------------------------
                                    598 ;	 function sendLatchedPulses
                                    599 ;	-----------------------------------------
      0004CB                        600 _sendLatchedPulses:
                           000007   601 	ar7 = 0x07
                           000006   602 	ar6 = 0x06
                           000005   603 	ar5 = 0x05
                           000004   604 	ar4 = 0x04
                           000003   605 	ar3 = 0x03
                           000002   606 	ar2 = 0x02
                           000001   607 	ar1 = 0x01
                           000000   608 	ar0 = 0x00
      0004CB AF 82            [24]  609 	mov	r7,dpl
                                    610 ;	icn2053.c:13: LED_CLK = 1;
      0004CD D2 93            [12]  611 	setb	_LED_CLK
                                    612 ;	icn2053.c:14: LED_CLK = 0;
      0004CF C2 93            [12]  613 	clr	_LED_CLK
                                    614 ;	icn2053.c:16: LED_LE = 1;
      0004D1 D2 92            [12]  615 	setb	_LED_LE
      0004D3                        616 00103$:
                                    617 ;	icn2053.c:17: for(; pulses > 0; pulses--) {
      0004D3 EF               [12]  618 	mov	a,r7
      0004D4 60 07            [24]  619 	jz	00101$
                                    620 ;	icn2053.c:18: LED_CLK = 1;
      0004D6 D2 93            [12]  621 	setb	_LED_CLK
                                    622 ;	icn2053.c:19: LED_CLK = 0;
      0004D8 C2 93            [12]  623 	clr	_LED_CLK
                                    624 ;	icn2053.c:17: for(; pulses > 0; pulses--) {
      0004DA 1F               [12]  625 	dec	r7
      0004DB 80 F6            [24]  626 	sjmp	00103$
      0004DD                        627 00101$:
                                    628 ;	icn2053.c:21: LED_LE = 0;
      0004DD C2 92            [12]  629 	clr	_LED_LE
                                    630 ;	icn2053.c:23: LED_CLK = 1;
      0004DF D2 93            [12]  631 	setb	_LED_CLK
                                    632 ;	icn2053.c:24: LED_CLK = 0;
      0004E1 C2 93            [12]  633 	clr	_LED_CLK
      0004E3 22               [24]  634 	ret
                                    635 ;------------------------------------------------------------
                                    636 ;Allocation info for local variables in function 'sendLatchedData'
                                    637 ;------------------------------------------------------------
                                    638 ;latchedBits               Allocated with name '_sendLatchedData_PARM_2'
                                    639 ;data                      Allocated to registers r6 r7 
                                    640 ;bits                      Allocated to registers r5 
                                    641 ;------------------------------------------------------------
                                    642 ;	icn2053.c:27: void sendLatchedData(const uint16_t data, int8_t latchedBits) {
                                    643 ;	-----------------------------------------
                                    644 ;	 function sendLatchedData
                                    645 ;	-----------------------------------------
      0004E4                        646 _sendLatchedData:
      0004E4 AE 82            [24]  647 	mov	r6,dpl
      0004E6 AF 83            [24]  648 	mov	r7,dph
                                    649 ;	icn2053.c:32: if(latchedBits == 1) {
      0004E8 74 01            [12]  650 	mov	a,#0x01
      0004EA B5 7B 02         [24]  651 	cjne	a,_sendLatchedData_PARM_2,00123$
      0004ED 80 03            [24]  652 	sjmp	00124$
      0004EF                        653 00123$:
      0004EF 02 05 A7         [24]  654 	ljmp	00102$
      0004F2                        655 00124$:
                                    656 ;	icn2053.c:33: clockBit(data, 15);
      0004F2 7C 00            [12]  657 	mov	r4,#0x00
      0004F4 74 80            [12]  658 	mov	a,#0x80
      0004F6 5F               [12]  659 	anl	a,r7
      0004F7 4C               [12]  660 	orl	a,r4
      0004F8 24 FF            [12]  661 	add	a,#0xff
      0004FA 92 91            [24]  662 	mov	_LED_MOSI,c
      0004FC D2 93            [12]  663 	setb	_LED_CLK
      0004FE C2 93            [12]  664 	clr	_LED_CLK
                                    665 ;	icn2053.c:34: clockBit(data, 14);
      000500 EF               [12]  666 	mov	a,r7
      000501 A2 E6            [12]  667 	mov	c,acc[6]
      000503 92 00            [24]  668 	mov  _sendLatchedData_sloc0_1_0,c
      000505 92 91            [24]  669 	mov	_LED_MOSI,c
      000507 D2 93            [12]  670 	setb	_LED_CLK
      000509 C2 93            [12]  671 	clr	_LED_CLK
                                    672 ;	icn2053.c:35: clockBit(data, 13);
      00050B EF               [12]  673 	mov	a,r7
      00050C A2 E5            [12]  674 	mov	c,acc[5]
      00050E 92 00            [24]  675 	mov  _sendLatchedData_sloc0_1_0,c
      000510 92 91            [24]  676 	mov	_LED_MOSI,c
      000512 D2 93            [12]  677 	setb	_LED_CLK
      000514 C2 93            [12]  678 	clr	_LED_CLK
                                    679 ;	icn2053.c:36: clockBit(data, 12);
      000516 EF               [12]  680 	mov	a,r7
      000517 A2 E4            [12]  681 	mov	c,acc[4]
      000519 92 00            [24]  682 	mov  _sendLatchedData_sloc0_1_0,c
      00051B 92 91            [24]  683 	mov	_LED_MOSI,c
      00051D D2 93            [12]  684 	setb	_LED_CLK
      00051F C2 93            [12]  685 	clr	_LED_CLK
                                    686 ;	icn2053.c:37: clockBit(data, 11);
      000521 EF               [12]  687 	mov	a,r7
      000522 A2 E3            [12]  688 	mov	c,acc[3]
      000524 92 00            [24]  689 	mov  _sendLatchedData_sloc0_1_0,c
      000526 92 91            [24]  690 	mov	_LED_MOSI,c
      000528 D2 93            [12]  691 	setb	_LED_CLK
      00052A C2 93            [12]  692 	clr	_LED_CLK
                                    693 ;	icn2053.c:38: clockBit(data, 10);
      00052C EF               [12]  694 	mov	a,r7
      00052D A2 E2            [12]  695 	mov	c,acc[2]
      00052F 92 00            [24]  696 	mov  _sendLatchedData_sloc0_1_0,c
      000531 92 91            [24]  697 	mov	_LED_MOSI,c
      000533 D2 93            [12]  698 	setb	_LED_CLK
      000535 C2 93            [12]  699 	clr	_LED_CLK
                                    700 ;	icn2053.c:39: clockBit(data, 9);
      000537 EF               [12]  701 	mov	a,r7
      000538 A2 E1            [12]  702 	mov	c,acc[1]
      00053A 92 00            [24]  703 	mov  _sendLatchedData_sloc0_1_0,c
      00053C 92 91            [24]  704 	mov	_LED_MOSI,c
      00053E D2 93            [12]  705 	setb	_LED_CLK
      000540 C2 93            [12]  706 	clr	_LED_CLK
                                    707 ;	icn2053.c:40: clockBit(data, 8);
      000542 EF               [12]  708 	mov	a,r7
      000543 13               [12]  709 	rrc	a
      000544 92 00            [24]  710 	mov  _sendLatchedData_sloc0_1_0,c
      000546 92 91            [24]  711 	mov	_LED_MOSI,c
      000548 D2 93            [12]  712 	setb	_LED_CLK
      00054A C2 93            [12]  713 	clr	_LED_CLK
                                    714 ;	icn2053.c:41: clockBit(data, 7);
      00054C EE               [12]  715 	mov	a,r6
      00054D 33               [12]  716 	rlc	a
      00054E 92 00            [24]  717 	mov  _sendLatchedData_sloc0_1_0,c
      000550 92 91            [24]  718 	mov	_LED_MOSI,c
      000552 D2 93            [12]  719 	setb	_LED_CLK
      000554 C2 93            [12]  720 	clr	_LED_CLK
                                    721 ;	icn2053.c:42: clockBit(data, 6);
      000556 EE               [12]  722 	mov	a,r6
      000557 A2 E6            [12]  723 	mov	c,acc[6]
      000559 92 00            [24]  724 	mov  _sendLatchedData_sloc0_1_0,c
      00055B 92 91            [24]  725 	mov	_LED_MOSI,c
      00055D D2 93            [12]  726 	setb	_LED_CLK
      00055F C2 93            [12]  727 	clr	_LED_CLK
                                    728 ;	icn2053.c:43: clockBit(data, 5);
      000561 EE               [12]  729 	mov	a,r6
      000562 A2 E5            [12]  730 	mov	c,acc[5]
      000564 92 00            [24]  731 	mov  _sendLatchedData_sloc0_1_0,c
      000566 92 91            [24]  732 	mov	_LED_MOSI,c
      000568 D2 93            [12]  733 	setb	_LED_CLK
      00056A C2 93            [12]  734 	clr	_LED_CLK
                                    735 ;	icn2053.c:44: clockBit(data, 4);
      00056C EE               [12]  736 	mov	a,r6
      00056D A2 E4            [12]  737 	mov	c,acc[4]
      00056F 92 00            [24]  738 	mov  _sendLatchedData_sloc0_1_0,c
      000571 92 91            [24]  739 	mov	_LED_MOSI,c
      000573 D2 93            [12]  740 	setb	_LED_CLK
      000575 C2 93            [12]  741 	clr	_LED_CLK
                                    742 ;	icn2053.c:45: clockBit(data, 3);
      000577 EE               [12]  743 	mov	a,r6
      000578 A2 E3            [12]  744 	mov	c,acc[3]
      00057A 92 00            [24]  745 	mov  _sendLatchedData_sloc0_1_0,c
      00057C 92 91            [24]  746 	mov	_LED_MOSI,c
      00057E D2 93            [12]  747 	setb	_LED_CLK
      000580 C2 93            [12]  748 	clr	_LED_CLK
                                    749 ;	icn2053.c:46: clockBit(data, 2);
      000582 EE               [12]  750 	mov	a,r6
      000583 A2 E2            [12]  751 	mov	c,acc[2]
      000585 92 00            [24]  752 	mov  _sendLatchedData_sloc0_1_0,c
      000587 92 91            [24]  753 	mov	_LED_MOSI,c
      000589 D2 93            [12]  754 	setb	_LED_CLK
      00058B C2 93            [12]  755 	clr	_LED_CLK
                                    756 ;	icn2053.c:47: clockBit(data, 1);
      00058D EE               [12]  757 	mov	a,r6
      00058E A2 E1            [12]  758 	mov	c,acc[1]
      000590 92 00            [24]  759 	mov  _sendLatchedData_sloc0_1_0,c
      000592 92 91            [24]  760 	mov	_LED_MOSI,c
      000594 D2 93            [12]  761 	setb	_LED_CLK
      000596 C2 93            [12]  762 	clr	_LED_CLK
                                    763 ;	icn2053.c:48: LED_LE = 1;
      000598 D2 92            [12]  764 	setb	_LED_LE
                                    765 ;	icn2053.c:49: clockBit(data, 0);
      00059A EE               [12]  766 	mov	a,r6
      00059B 13               [12]  767 	rrc	a
      00059C 92 00            [24]  768 	mov  _sendLatchedData_sloc0_1_0,c
      00059E 92 91            [24]  769 	mov	_LED_MOSI,c
      0005A0 D2 93            [12]  770 	setb	_LED_CLK
      0005A2 C2 93            [12]  771 	clr	_LED_CLK
                                    772 ;	icn2053.c:50: LED_LE = 0;
      0005A4 C2 92            [12]  773 	clr	_LED_LE
                                    774 ;	icn2053.c:51: return;
      0005A6 22               [24]  775 	ret
      0005A7                        776 00102$:
                                    777 ;	icn2053.c:54: latchedBits--;
      0005A7 15 7B            [12]  778 	dec	_sendLatchedData_PARM_2
                                    779 ;	icn2053.c:58: for(bits = 15; bits >= 0; bits--) {
      0005A9 7D 0F            [12]  780 	mov	r5,#0x0f
      0005AB                        781 00106$:
                                    782 ;	icn2053.c:60: LED_MOSI = data & (1 << bits);
      0005AB 8D F0            [24]  783 	mov	b,r5
      0005AD 05 F0            [12]  784 	inc	b
      0005AF 7B 01            [12]  785 	mov	r3,#0x01
      0005B1 7C 00            [12]  786 	mov	r4,#0x00
      0005B3 80 06            [24]  787 	sjmp	00126$
      0005B5                        788 00125$:
      0005B5 EB               [12]  789 	mov	a,r3
      0005B6 2B               [12]  790 	add	a,r3
      0005B7 FB               [12]  791 	mov	r3,a
      0005B8 EC               [12]  792 	mov	a,r4
      0005B9 33               [12]  793 	rlc	a
      0005BA FC               [12]  794 	mov	r4,a
      0005BB                        795 00126$:
      0005BB D5 F0 F7         [24]  796 	djnz	b,00125$
      0005BE EE               [12]  797 	mov	a,r6
      0005BF 52 03            [12]  798 	anl	ar3,a
      0005C1 EF               [12]  799 	mov	a,r7
      0005C2 52 04            [12]  800 	anl	ar4,a
      0005C4 EB               [12]  801 	mov	a,r3
      0005C5 4C               [12]  802 	orl	a,r4
      0005C6 24 FF            [12]  803 	add	a,#0xff
      0005C8 92 91            [24]  804 	mov	_LED_MOSI,c
                                    805 ;	icn2053.c:62: if(bits == latchedBits)
      0005CA ED               [12]  806 	mov	a,r5
      0005CB B5 7B 02         [24]  807 	cjne	a,_sendLatchedData_PARM_2,00104$
                                    808 ;	icn2053.c:63: LED_LE = 1;
      0005CE D2 92            [12]  809 	setb	_LED_LE
      0005D0                        810 00104$:
                                    811 ;	icn2053.c:65: LED_CLK = 1;
      0005D0 D2 93            [12]  812 	setb	_LED_CLK
                                    813 ;	icn2053.c:66: LED_CLK = 0;
      0005D2 C2 93            [12]  814 	clr	_LED_CLK
                                    815 ;	icn2053.c:58: for(bits = 15; bits >= 0; bits--) {
      0005D4 1D               [12]  816 	dec	r5
      0005D5 ED               [12]  817 	mov	a,r5
      0005D6 30 E7 D2         [24]  818 	jnb	acc.7,00106$
                                    819 ;	icn2053.c:68: LED_LE = 0;
      0005D9 C2 92            [12]  820 	clr	_LED_LE
      0005DB 22               [24]  821 	ret
                                    822 ;------------------------------------------------------------
                                    823 ;Allocation info for local variables in function 'icn2053_DataLatch'
                                    824 ;------------------------------------------------------------
                                    825 ;data                      Allocated to registers 
                                    826 ;------------------------------------------------------------
                                    827 ;	icn2053.c:72: void icn2053_DataLatch(const uint16_t data) {
                                    828 ;	-----------------------------------------
                                    829 ;	 function icn2053_DataLatch
                                    830 ;	-----------------------------------------
      0005DC                        831 _icn2053_DataLatch:
                                    832 ;	icn2053.c:73: sendLatchedData(data, 1);
      0005DC 75 7B 01         [24]  833 	mov	_sendLatchedData_PARM_2,#0x01
      0005DF 02 04 E4         [24]  834 	ljmp	_sendLatchedData
                                    835 ;------------------------------------------------------------
                                    836 ;Allocation info for local variables in function 'icn2053_Vsync'
                                    837 ;------------------------------------------------------------
                                    838 ;	icn2053.c:77: void icn2053_Vsync() {
                                    839 ;	-----------------------------------------
                                    840 ;	 function icn2053_Vsync
                                    841 ;	-----------------------------------------
      0005E2                        842 _icn2053_Vsync:
                                    843 ;	icn2053.c:78: sendLatchedPulses(3);
      0005E2 75 82 03         [24]  844 	mov	dpl,#0x03
      0005E5 02 04 CB         [24]  845 	ljmp	_sendLatchedPulses
                                    846 ;------------------------------------------------------------
                                    847 ;Allocation info for local variables in function 'icn2053_WriteConfigRegister'
                                    848 ;------------------------------------------------------------
                                    849 ;data                      Allocated with name '_icn2053_WriteConfigRegister_PARM_2'
                                    850 ;reg                       Allocated to registers r7 
                                    851 ;latches                   Allocated to registers r7 
                                    852 ;------------------------------------------------------------
                                    853 ;	icn2053.c:81: void icn2053_WriteConfigRegister(uint8_t reg, uint16_t data) {
                                    854 ;	-----------------------------------------
                                    855 ;	 function icn2053_WriteConfigRegister
                                    856 ;	-----------------------------------------
      0005E8                        857 _icn2053_WriteConfigRegister:
                                    858 ;	icn2053.c:82: const uint8_t latches = 2 + reg*2;
      0005E8 E5 82            [12]  859 	mov	a,dpl
      0005EA 25 82            [12]  860 	add	a,dpl
      0005EC FF               [12]  861 	mov	r7,a
      0005ED 0F               [12]  862 	inc	r7
      0005EE 0F               [12]  863 	inc	r7
                                    864 ;	icn2053.c:83: icn2053_PreActive();
      0005EF C0 07            [24]  865 	push	ar7
      0005F1 12 06 0A         [24]  866 	lcall	_icn2053_PreActive
      0005F4 D0 07            [24]  867 	pop	ar7
                                    868 ;	icn2053.c:84: sendLatchedData(data, latches);
      0005F6 8F 7B            [24]  869 	mov	_sendLatchedData_PARM_2,r7
      0005F8 85 08 82         [24]  870 	mov	dpl,_icn2053_WriteConfigRegister_PARM_2
      0005FB 85 09 83         [24]  871 	mov	dph,(_icn2053_WriteConfigRegister_PARM_2 + 1)
      0005FE 02 04 E4         [24]  872 	ljmp	_sendLatchedData
                                    873 ;------------------------------------------------------------
                                    874 ;Allocation info for local variables in function 'icn2053_EnableAllOutputChannels'
                                    875 ;------------------------------------------------------------
                                    876 ;	icn2053.c:88: void icn2053_EnableAllOutputChannels() {
                                    877 ;	-----------------------------------------
                                    878 ;	 function icn2053_EnableAllOutputChannels
                                    879 ;	-----------------------------------------
      000601                        880 _icn2053_EnableAllOutputChannels:
                                    881 ;	icn2053.c:89: icn2053_PreActive();
      000601 12 06 0A         [24]  882 	lcall	_icn2053_PreActive
                                    883 ;	icn2053.c:90: sendLatchedPulses(12);
      000604 75 82 0C         [24]  884 	mov	dpl,#0x0c
      000607 02 04 CB         [24]  885 	ljmp	_sendLatchedPulses
                                    886 ;------------------------------------------------------------
                                    887 ;Allocation info for local variables in function 'icn2053_PreActive'
                                    888 ;------------------------------------------------------------
                                    889 ;	icn2053.c:94: void icn2053_PreActive() {
                                    890 ;	-----------------------------------------
                                    891 ;	 function icn2053_PreActive
                                    892 ;	-----------------------------------------
      00060A                        893 _icn2053_PreActive:
                                    894 ;	icn2053.c:95: sendLatchedPulses(14);
      00060A 75 82 0E         [24]  895 	mov	dpl,#0x0e
      00060D 02 04 CB         [24]  896 	ljmp	_sendLatchedPulses
                                    897 ;------------------------------------------------------------
                                    898 ;Allocation info for local variables in function 'icn2053_begin'
                                    899 ;------------------------------------------------------------
                                    900 ;	icn2053.c:99: void icn2053_begin() {
                                    901 ;	-----------------------------------------
                                    902 ;	 function icn2053_begin
                                    903 ;	-----------------------------------------
      000610                        904 _icn2053_begin:
                                    905 ;	icn2053.c:102: icn2053_WriteConfigRegister(1, REG1_SCAN_LINE(0) | REG1_OPT(1) | REG1_ACC_RATE(0x3));
      000610 75 08 70         [24]  906 	mov	_icn2053_WriteConfigRegister_PARM_2,#0x70
      000613 75 09 00         [24]  907 	mov	(_icn2053_WriteConfigRegister_PARM_2 + 1),#0x00
      000616 75 82 01         [24]  908 	mov	dpl,#0x01
      000619 12 05 E8         [24]  909 	lcall	_icn2053_WriteConfigRegister
                                    910 ;	icn2053.c:108: icn2053_EnableAllOutputChannels();
      00061C 02 06 01         [24]  911 	ljmp	_icn2053_EnableAllOutputChannels
                                    912 ;------------------------------------------------------------
                                    913 ;Allocation info for local variables in function 'icn2053_updateDisplay'
                                    914 ;------------------------------------------------------------
                                    915 ;ledCount                  Allocated with name '_icn2053_updateDisplay_PARM_2'
                                    916 ;leds                      Allocated to registers r5 r6 r7 
                                    917 ;expandedData              Allocated to registers 
                                    918 ;------------------------------------------------------------
                                    919 ;	icn2053.c:111: void icn2053_updateDisplay(uint8_t* leds, uint8_t ledCount) {
                                    920 ;	-----------------------------------------
                                    921 ;	 function icn2053_updateDisplay
                                    922 ;	-----------------------------------------
      00061F                        923 _icn2053_updateDisplay:
      00061F AD 82            [24]  924 	mov	r5,dpl
      000621 AE 83            [24]  925 	mov	r6,dph
      000623 AF F0            [24]  926 	mov	r7,b
                                    927 ;	icn2053.c:119: mDelayuS(150);       // Macroblock app note says 50GCLK needed between last last and VSYNC
      000625 AC 0A            [24]  928 	mov	r4,_icn2053_updateDisplay_PARM_2
      000627                        929 00103$:
                                    930 ;	icn2053.c:114: for(; ledCount > 0; ledCount--) {
      000627 EC               [12]  931 	mov	a,r4
      000628 60 36            [24]  932 	jz	00101$
                                    933 ;	icn2053.c:115: expandedData = leds[ledCount-1] << 8;
      00062A 8C 02            [24]  934 	mov	ar2,r4
      00062C 7B 00            [12]  935 	mov	r3,#0x00
      00062E 1A               [12]  936 	dec	r2
      00062F BA FF 01         [24]  937 	cjne	r2,#0xff,00117$
      000632 1B               [12]  938 	dec	r3
      000633                        939 00117$:
      000633 EA               [12]  940 	mov	a,r2
      000634 2D               [12]  941 	add	a,r5
      000635 FA               [12]  942 	mov	r2,a
      000636 EB               [12]  943 	mov	a,r3
      000637 3E               [12]  944 	addc	a,r6
      000638 F9               [12]  945 	mov	r1,a
      000639 8F 03            [24]  946 	mov	ar3,r7
      00063B 8A 82            [24]  947 	mov	dpl,r2
      00063D 89 83            [24]  948 	mov	dph,r1
      00063F 8B F0            [24]  949 	mov	b,r3
      000641 12 0E D8         [24]  950 	lcall	__gptrget
      000644 FA               [12]  951 	mov	r2,a
      000645 8A 83            [24]  952 	mov	dph,r2
      000647 75 82 00         [24]  953 	mov	dpl,#0x00
                                    954 ;	icn2053.c:116: icn2053_DataLatch(expandedData);
      00064A C0 07            [24]  955 	push	ar7
      00064C C0 06            [24]  956 	push	ar6
      00064E C0 05            [24]  957 	push	ar5
      000650 C0 04            [24]  958 	push	ar4
      000652 12 05 DC         [24]  959 	lcall	_icn2053_DataLatch
      000655 D0 04            [24]  960 	pop	ar4
      000657 D0 05            [24]  961 	pop	ar5
      000659 D0 06            [24]  962 	pop	ar6
      00065B D0 07            [24]  963 	pop	ar7
                                    964 ;	icn2053.c:114: for(; ledCount > 0; ledCount--) {
      00065D 1C               [12]  965 	dec	r4
      00065E 80 C7            [24]  966 	sjmp	00103$
      000660                        967 00101$:
                                    968 ;	icn2053.c:119: mDelayuS(150);       // Macroblock app note says 50GCLK needed between last last and VSYNC
      000660 90 00 96         [24]  969 	mov	dptr,#0x0096
      000663 12 09 9E         [24]  970 	lcall	_mDelayuS
                                    971 ;	icn2053.c:121: TR2 = 0;    // Disable GCLK
      000666 C2 CA            [12]  972 	clr	_TR2
                                    973 ;	icn2053.c:123: icn2053_Vsync();
      000668 12 05 E2         [24]  974 	lcall	_icn2053_Vsync
                                    975 ;	icn2053.c:124: mDelayuS(150);       // Macroblock app note says 100ns needed between VSYNC and GCLK start
      00066B 90 00 96         [24]  976 	mov	dptr,#0x0096
      00066E 12 09 9E         [24]  977 	lcall	_mDelayuS
                                    978 ;	icn2053.c:126: TR2 = 1;    // Enable GCLK
      000671 D2 CA            [12]  979 	setb	_TR2
      000673 22               [24]  980 	ret
                                    981 	.area CSEG    (CODE)
                                    982 	.area CONST   (CODE)
                                    983 	.area XINIT   (CODE)
                                    984 	.area CABS    (ABS,CODE)
